CREATE TABLE PLAYERS(
	NAME VARCHAR(200) NOT NULL PRIMARY KEY,
	SCORE INT NOT NULL
);

CREATE TABLE RELATION(
	PLAYER VARCHAR(200) NOT NULL REFERENCES PLAYERS,
	DURATION INT NOT NULL REFERENCES GAME.DURATION,
	ID INT NOT NULL REFERENCES GAME.ID,
	PRIMARY KEY (PLAYER, DURATION, ID)
);

CREATE TABLE GAME(
	WINNER VARCHAR(200) NOT NULL REFERENCES PLAYERS,
	DURATION INT NOT NULL,
	ID INT NOT NULL UNIQUE,
	PRIMARY KEY (DURATION, ID)
);

--GET HIGHEST ID
SELECT MAX(GAME.ID)
FROM GAME G

--GET ONE PLAYER
SELECT *
FROM PLAYERS
WHERE PLAYERS.NAME = 'name'
;

--GET SCORE FOR PLAYER
SELECT PLAYERS.SCORE
FROM PLAYERS
WHERE PLAYERS.NAME = 'player'
;

--UPDATE SCORE
UPDATE PLAYERS
SET SCORE = 'score'
WHERE NAME = 'player'
;

--INSERT NEW PLAYER
INSERT INTO PLAYERS(NAME, SCORE) VALUE ('player', 00);

--INSERT NEW GAME
INSERT INTO GAME(WINNER, DURATION, ID) VALUE ('winner', 00, 0);

--INSERT NEW RELATION
INSERT INTO RELATION(PLAYER, DURATION, ID) VALUE ('player', 00, 0);

--NOT YET IMPLEMENTED IN PYTHON

--GET ALL PLAYERS ORDERED BY POINTS
SELECT *
FROM PLAYERS
ORDER BY PLAYERS.SCORE DESC
;

--GET THE MAX NUMBER OF WINNED
SELECT G.WINNER
FROM GAME G
GROUP BY G.WINNER
HAVING COUNT(*) >= ALL (
	SELECT COUNT(*)
	FROM GAME G1
	GROUP BY G1.WINNER
);

--GET THE NUMBER OF WINNED PER USER
SELECT G.WINNER, COUNT(*)
FROM GAME G
GROUP BY G.WINNER
	
--GET THE NUMBER OF PLAYED PER USER
SELECT R.PLAYER, COUNT(*)
FROM RELATION R
GROUP BY R.PLAYER
